{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","Header","branding","href","NotFound","App","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1e4afc74.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n        return {\r\n            ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !==  action.payload\r\n            )\r\n        };\r\n        case 'ADD_CONTACT':\r\n        return {\r\n            ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) :contact\r\n            )\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n    \r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\n class Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    // onSHowClick = e => {\r\n    //     this.setState({showContactInfo: !this.state.showContactInfo});\r\n    // };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try{\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({ type: 'DELETE_CONTACT', payload:id });\r\n        } catch(e) {\r\n            dispatch({ type: 'DELETE_CONTACT', payload:id });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {id , name , email , phone} = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}{' '}\r\n                                <i \r\n                                    onClick={() => \r\n                                            this.setState({showContactInfo:\r\n                                            !this.state.showContactInfo\r\n                                        })\r\n                                    } \r\n                                    className=\"fas fa-sort-down\"\r\n                                    style={{cursor: 'pointer'}}\r\n                                />\r\n                                <i \r\n                                    className=\"fas fa-times\" \r\n                                    style={{cursor:'pointer' , float:'right' , color:'red' }}\r\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                                />\r\n\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float:'right',\r\n                                            color:'black',\r\n                                            marginRight:'1rem'\r\n                                        }}\r\n                                    >  \r\n                                    </i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email:{email}</li>\r\n                                    <li className=\"list-group-item\">Phone:{phone}</li>\r\n                                </ul> \r\n                            ) : null}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired  \r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\n\r\n class Contacts extends Component {\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact    \r\n                                    key={contact.id}\r\n                                    contact= {contact}\r\n                                />\r\n                            ))}        \r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                type={type}\r\n                name={name} \r\n                className={classnames(\r\n                    'form-control form-control-lg' , {\r\n                    'is-invalid' : error})}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    };\r\n    \r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n    onSubmit = async (dispatch , e) => {\r\n        e.preventDefault();\r\n\r\n        const { name , email , phone,} = this.state;\r\n\r\n        //Check For Errors\r\n        if(name === ''){\r\n            this.setState({errors:{ name: 'Name is required..!' }});\r\n            return;\r\n        }\r\n        if(email === ''){\r\n            this.setState({errors:{ email: 'Email is required..!' }});\r\n            return;\r\n        }\r\n        if(phone === ''){\r\n            this.setState({errors:{ phone: 'Phone is required..!' }});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n        dispatch({type: 'ADD_CONTACT' , payload: res.data });\r\n\r\n        //Clear state\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n    render() {\r\n        const {name, email, phone , errors} = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">\r\n                            Add Contact\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                    \r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                     <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                     <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input \r\n                                        type=\"submit\" \r\n                                        value=\"Add Contact\" \r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    };\r\n    \r\n    async componentDidMount(){\r\n        const{ id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${ id }`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n    onSubmit = async (dispatch , e) => {\r\n        e.preventDefault();\r\n\r\n        const { name , email , phone,} = this.state;\r\n\r\n        //Check For Errors\r\n        if(name === ''){\r\n            this.setState({errors:{ name: 'Name is required..!' }});\r\n            return;\r\n        }\r\n        if(email === ''){\r\n            this.setState({errors:{ email: 'Email is required..!' }});\r\n            return;\r\n        }\r\n        if(phone === ''){\r\n            this.setState({errors:{ phone: 'Phone is required..!' }});\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({type:'UPDATE_CONTACT', payload: res.data});\r\n\r\n        //Clear state\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n    render() {\r\n        const {name, email, phone , errors} = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">\r\n                            Edit Contact\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                    \r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                     <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                     <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input \r\n                                        type=\"submit\" \r\n                                        value=\"Update Contact\" \r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\"> {branding} </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i>Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i>Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i>About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>    \r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My Apps'\r\n};\r\n\r\nHeader.propTypes =  {\r\n    branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                About Contact Manager\r\n            </h1>\r\n            <p className=\"lead\">\r\n                Simple app to manage contacts\r\n            </p>\r\n            <p className=\"text-secondary\">\r\n                Version 1.0.0\r\n            </p>            \r\n        </div>\r\n    );\r\n};","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> page not found </h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n// class App extends Component{\n//   render() {\n//     return(\n//       <Provider>\n//         <div className=\"App\">\n//           <Header branding=\"Contact Manager\">\n//             <div className=\"container\">\n//               <Contacts/>\n//             </div>\n//           </Header>\n//         </div>\n//       </Provider>  \n//     );\n//   }\n// }\n\n\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\"/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>  \n          </div>\n        </div>\n      </Router> \n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}